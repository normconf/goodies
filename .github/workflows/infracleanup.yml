name: cleanup CI
# Controls when the action will run.

on:
  # Only trigger, when the build workflow succeeded
  workflow_run:
    workflows: ["Goodies CI"]
    types:
      - completed
  workflow_dispatch:

env:
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }} # set this to your preferred AWS region, e.g. us-west-1
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_REGION }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.4
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install project
        run: poetry install --no-interaction
      #----------------------------------------------
      #              run infra cleanup
      #----------------------------------------------
      - name: Execute image cleanup
        run: |
          poetry run python cleanup_images.py $AWS_ACCESS_KEY $AWS_SECRET_ACCESS_KEY $REGION
